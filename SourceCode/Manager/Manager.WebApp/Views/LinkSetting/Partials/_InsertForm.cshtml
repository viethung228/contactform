@using System.Linq
@using MainApi.DataLayer.Entities;
@using Manager.SharedLibs;
@using Manager.WebApp.Resources
@using Manager.WebApp.Helpers
@model Manager.WebApp.Models.LinkSettingUpdateModel


@{
    var imgUrl = CdnHelper.GetFullFilePath(Model.CoverImage);

}
<div class="m-portlet__body">
    <div class="row form-group">
        @Html.HiddenFor(m => m.Id)
        <div class="form-group align-items-center justify-content-center">
            <div class="col-sm-3" title="@ManagerResource.LB_COVER_IMAGE">
                <div class="">
                    <div class="uploadbox" id="uploadbox">
                        <img id="preview-image" class="file-upload-btn thumbImg img-full-center pointer @((string.IsNullOrEmpty(Model.CoverImage)) ? "hidden" : string.Empty)" src="@imgUrl" />
                        <label id="preview-upload-btn" for="file-upload" class="custom-file-upload file-upload-icon @((!string.IsNullOrEmpty(Model.CoverImage)) ? "hidden" : string.Empty)">
                            <i class="la la-cloud-upload"></i> <span>顔写真をアップロード</span>
                        </label>
                        @Html.HiddenFor(m => m.CoverImage)
                        <input id="file-upload" class="file-upload-storage hidden" name="image_file_upload" type="file" accept="image/*" data-preview="uploadbox" onchange="PreviewImage()">
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-12">
            <label class="form-control-label">Setting Name: <span class="text-danger">*</span></label>
            @Html.TextBoxFor(m => m.SettingName, new { @class = "form-control", @required="" })
            @Html.ValidationMessageFor(m => m.SettingName, "", new { @class = "text-danger" })
        </div>
        <div class="col-lg-12">
            <label class="form-control-label">URL:</label>
            @Html.TextBoxFor(m => m.Link, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Link, "", new { @class = "text-danger" })
        </div>
        <div class="col-4">
            <div class="m-checkbox-inline mt5">
                <label class="m-checkbox">
                    <input type="checkbox" @(Model.Type ? "checked" : string.Empty) name="@Html.NameFor(m=>m.Type)" value="true">
                    Is Image
                    <span></span>
                </label>
            </div>
        </div>
    </div>

    @{
        var currentController = ViewContext.RouteData.Values["controller"];
        var backLink = string.Format("/{0}", currentController);
    }

    <div class="form-group row mt30">
        <div class="col-md-12">
            <button type="submit" class="btn btn-info btn-sm">
                <i class="fa fa-floppy-o"></i> @ManagerResource.LB_SAVE
            </button>
            <a class="btn btn-outline-info btn-sm btn-back" href="@backLink"><i class="fa fa-remove"></i> @ManagerResource.LB_CANCEL</a>
        </div>
    </div>
</div>
<script>
    $('.selectpicker').selectpicker();
</script>